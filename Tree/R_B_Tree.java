/**
 * 红黑树
 * 一种特殊的二叉查找树。红黑树的每个节点上都有存储位表示节点的颜色，可以是红(Red)或黑(Black)
 * 红黑树的特性:
 * （1）节点是红色或黑色
 * （2）根节点是黑色。
 * （3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]
 * （4）每个红色节点的两个子节点都是黑色。(从每个叶子到根的所有路径上不能有两个连续的红色节点)。
 * （5）从任一节点到其每个叶子的所有路径都包含相同数目的黑色节点。
 *
 * 红黑树的应用比较广泛，主要是用它来存储有序的数据，它的时间复杂度是O(lgn)，效率非常之高。
 * 例如，Java集合中的TreeSet和TreeMap，C++ STL中的set、map，以及Linux虚拟内存的管理，都是通过红黑树去实现的。
 *
 * 定理：一棵含有n个节点的红黑树的高度至多为2log(n+1).
 */
public class R_B_Tree {
}
